//--------------------------------------------------------------------------
//
// ScriptName : AriUVScaleChecker
// Contents   : UVの大きさが適切な解像度になっているかエッジごとに調べます。
// Author     : Ari
// Since      : 2015/03
// Update     : 2016/12/11 目標解像度基準の長さを変更できるようにしました。
//              2015/09/27 U方向V方向選択エッジ方向にスケールできるようにしました。。
//              2015/07/01 100%以外にもスケールできるようにしました。
// Note       : 
//              
//--------------------------------------------------------------------------

proc int AriUVScaleChecker_checkSideUv(string $uv0,string $uv1)
{
	string $uvToEdge[]=`polyListComponentConversion -te $uv0`;
	$uvToEdge=`filterExpand -selectionMask 32 $uvToEdge`;
	string $edgeToUv[]=`polyListComponentConversion -tuv $uvToEdge`;
	$edgeToUv=`filterExpand -selectionMask 35 $edgeToUv`;
	string $uvToFace[]=`polyListComponentConversion -tf $uv0`;
	$uvToFace=`filterExpand -selectionMask 34 $uvToFace`;
	string $faceToUv[]=`polyListComponentConversion -tuv $uvToFace`;
	$faceToUv=`filterExpand -selectionMask 35 $faceToUv`;
	if(stringArrayContains($uv1,$edgeToUv) && stringArrayContains($uv1,$faceToUv)){
		return 1;
	}
	else return 0;
}
proc float AriUVScaleChecker_distanceUV(string $uv0,string $uv1)
{
		float $dis;
		float $uvPos0[]=`polyEditUV -q $uv0`;
		float $uvPos1[]=`polyEditUV -q $uv1`;
		$dis=	 ($uvPos1[0]-$uvPos0[0])*($uvPos1[0]-$uvPos0[0])
					+($uvPos1[1]-$uvPos0[1])*($uvPos1[1]-$uvPos0[1]);
		$dis=sqrt ($dis);
		return $dis;
}
proc float AriUVScaleChecker_distanceVer(string $ver1,string $ver2)
{
	global string $AriUVScaleCheckerCheckBox[2];
	float $dis;
	float $verPos0[];
	float $verPos1[];
	int $worldTrue=0;
	if(`radioButton -q -sl $AriUVScaleCheckerCheckBox[0]`){
		$worldTrue=1;
	}
	if(`optionVar -exists "AriUVScaleCheckerWorld"`){
		if($worldTrue != `optionVar -q "AriUVScaleCheckerWorld"`) optionVar -intValue "AriUVScaleCheckerWorld" $worldTrue;
	}
	else	optionVar -intValue "AriUVScaleCheckerWorld" $worldTrue;
	if($worldTrue){
		$verPos0=`pointPosition -w $ver1`;
		$verPos1=`pointPosition -w $ver2`;
	}
	else{
		$verPos0=`pointPosition -l $ver1`;
		$verPos1=`pointPosition -l $ver2`;
	}
	$dis=	 ($verPos1[0]-$verPos0[0])*($verPos1[0]-$verPos0[0])
					+($verPos1[1]-$verPos0[1])*($verPos1[1]-$verPos0[1])
					+($verPos1[2]-$verPos0[2])*($verPos1[2]-$verPos0[2]);
	$dis=sqrt ($dis);
	return $dis;
}
proc getLiner(){
	global string $AriUVScaleCheckerGetText[0];
	global float $AriUVScaleCheckerMagni;
	string $meter = `currentUnit -q -linear`;
	$AriUVScaleCheckerMagni=300;
	string $meterView= $meter;
	text -e -l ("目標解像度") $AriUVScaleCheckerGetText[0];
	text -e -l ($meterView) $AriUVScaleCheckerGetText[1];
	text -e -l $meterView          $AriUVScaleCheckerGetText[2];
	text -e -l ("/X"+$meterView)  $AriUVScaleCheckerGetText[3];
	text -e -l ("pix/X"+$meterView) $AriUVScaleCheckerGetText[4];
}
global proc AriUVScaleChecker_Get(int $mode){
	global string $AriUVScaleCheckerGetText[10];
	global string $AriUVScaleCheckerGoButton[3];
	global string $AriUVScaleCheckerFloatF[12];
	global string $AriUVScaleCheckerOptionMenu[2];
	global string $AriUVScaleCheckerScaleVecRB;
	float $AriUVScaleCheckerMagni;
	float $texSize = `intField -q -v $AriUVScaleCheckerFloatF[8]`;
	float $pixSizePerVer = `floatField -q -v $AriUVScaleCheckerFloatF[5]`;
	float $magni         = `floatField -q -v $AriUVScaleCheckerFloatF[11]`;
	int $pivMode = `optionMenu -q -sl $AriUVScaleCheckerOptionMenu[0]`;
	int $scaleVec =`radioButtonGrp -q -sl $AriUVScaleCheckerScaleVecRB`;
	if(`optionVar -exists "AriUVScaleCheckerTexSize"`){
		if($texSize != `optionVar -q "AriUVScaleCheckerTexSize"`) optionVar -intValue "AriUVScaleCheckerTexSize" $texSize;
	}
	else	optionVar -intValue "AriUVScaleCheckerTexSize" $texSize;
	if(`optionVar -exists "AriUVScaleCheckerReso"`){
		if($pixSizePerVer != `optionVar -q "AriUVScaleCheckerReso"`) optionVar -floatValue "AriUVScaleCheckerReso" $pixSizePerVer;
	}
	else	optionVar -intValue "AriUVScaleCheckerReso" $pixSizePerVer;
	if(`optionVar -exists "AriUVScaleCheckerPiv"`){
		if($pivMode != `optionVar -q "AriUVScaleCheckerPiv"`) optionVar -intValue "AriUVScaleCheckerPiv" $pivMode;
	}
	else	optionVar -intValue "AriUVScaleCheckerPiv" $pivMode;
	if(`optionVar -exists "AriUVScaleCheckerCm"`){
		if($magni != `optionVar -q "AriUVScaleCheckerCm"`) optionVar -floatValue "AriUVScaleCheckerCm" $magni;
	}
	else	optionVar -intValue "AriUVScaleCheckerCm" $magni;
	float $par=`floatField -q -v $AriUVScaleCheckerFloatF[10]`;
	string $selectCom[]=`ls -sl`;
	string $groupUV1[];	
	string $groupUV2[];	
	string $groupUVFromeEdge1[];
	string $groupUVFromeEdge2[];
	$j=0;
	string $edges[]=`filterExpand -selectionMask 32 $selectCom`;
	int $edgesMax=size($edges);
	if($edgesMax>1000)$edgesMax=1000;
	for($i=0;$i<$edgesMax;$i++){
		string $edgeToUv[]=`polyListComponentConversion -tuv $edges[$i]`;
		$edgeToUv=`filterExpand -selectionMask 35 $edgeToUv`;
		if(size($edgeToUv)==2){
			$groupUVFromeEdge1[$j]=$edgeToUv[0];
			$groupUVFromeEdge2[$j]=$edgeToUv[1];
			$j++;
		}
		if(size($edgeToUv)==3){	
			for($k=0;$k<3;$k++){
				int $l=1;
				int $m=2;
				if($k==1)$l=0;
				if($k==2)$m=0;
				if(		AriUVScaleChecker_checkSideUv($edgeToUv[$k],$edgeToUv[$l])
					&&	AriUVScaleChecker_checkSideUv($edgeToUv[$k],$edgeToUv[$m])	){
					$groupUVFromeEdge1[$j]=$edgeToUv[$k];
					$groupUVFromeEdge2[$j]=$edgeToUv[$l];
					$j++;
					$groupUVFromeEdge1[$j]=$edgeToUv[$k];
					$groupUVFromeEdge2[$j]=$edgeToUv[$m];
					$j++;
				}
			}
		}		
		if(size($edgeToUv)==4){	
			for($k=1;$k<4;$k++){
				if(AriUVScaleChecker_checkSideUv($edgeToUv[0],$edgeToUv[$k])){
					$groupUVFromeEdge1[$j]=$edgeToUv[0];
					$groupUVFromeEdge2[$j]=$edgeToUv[$k];
					$j++;
					int $l=2;
					int $m=3;
					if($k==2)$l=1;
					if($k==3)$m=1;
					$groupUVFromeEdge1[$j]=$edgeToUv[$l];
					$groupUVFromeEdge2[$j]=$edgeToUv[$m];
					$j++;
					break;
				}
			}
		}
	}
	$groupUV1=$groupUVFromeEdge1;
	$groupUV2=$groupUVFromeEdge2;
	if(size($groupUV1)==1){
		radioButtonGrp -e -en4 1  $AriUVScaleCheckerScaleVecRB;
		if($scaleVec==4){
			button -e -en 0 $AriUVScaleCheckerGoButton[0];
		}
		else{
			button -e -en 1 $AriUVScaleCheckerGoButton[0];
		}
	}
	else{
		radioButtonGrp -e -en4 0  $AriUVScaleCheckerScaleVecRB;
		button -e -en 1 $AriUVScaleCheckerGoButton[0];
	}
	float  $uvDis[];	
	float  $verDis[];	
	vector $uvBasePos1[];	
	vector $uvBasePos2[];	
	vector $uvVector[];	
	string $edgeNum[];
	for($i=0;$i<size($groupUV1);$i++){
		$uvDis[$i]=AriUVScaleChecker_distanceUV($groupUV1[$i],$groupUV2[$i]);
		string $vers[];
		$vers =`polyListComponentConversion -tv $groupUV1[$i]`;
		$vers =`filterExpand -selectionMask 31 $vers`;
		string $ver1=$vers[0];
		$vers =`polyListComponentConversion -tv $groupUV2[$i]`;
		$vers =`filterExpand -selectionMask 31 $vers`;
		string $ver2=$vers[0];
		$verDis[$i]=AriUVScaleChecker_distanceVer($ver1,$ver2);
		float $pos[] =`polyEditUV -q $groupUV1[$i]`;
		$uvBasePos1[$i]=<< $pos[0],$pos[1],$pos[2] >>;
		$pos =`polyEditUV -q $groupUV2[$i]`;
		$uvBasePos2[$i]=<< $pos[0],$pos[1],$pos[2] >>;
		$uvVector[$i]=$uvBasePos2[$i]-$uvBasePos1[$i];
		string $uvEdge[2]={$ver1,$ver2};
		string $edges[] =`polyListComponentConversion -in -te $uvEdge`;
		$edgeNum[$i]=$edges[0];
	}
	if($mode==1){
		int $pivMode = `optionMenu -q -sl $AriUVScaleCheckerOptionMenu[0]`;
		string $processedUvList[];
		string $nowShellUVList[];
		int $shellTotal=0;
		for($i=0; $i<size($groupUV1); $i++){
			if(stringArrayContains($groupUV1[$i],$processedUvList))continue;
			$shellTotal++;
			select $groupUV1[$i];
			polySelectBorderShell 0;
			string $shells[]=`ls -sl`;
			$shells=`filterExpand -selectionMask 35 $shells`;
			$processedUvList=stringArrayCatenate($processedUvList,$shells);
			$nowShellUVList=$shells;
			float $nowVerDisTotal=0;
			float $nowUvDisTotal=0;
			for($j=0; $j<size($groupUV1); $j++){
				if(!stringArrayContains($groupUV1[$j],$nowShellUVList))continue;
				$nowVerDisTotal=$nowVerDisTotal+$verDis[$j];
				$nowUvDisTotal=$nowUvDisTotal+$uvDis[$j];
			}
			float $nowUvPix  = $texSize*$nowUvDisTotal;
			float $nowUvPerM = $nowUvDisTotal/$nowVerDisTotal;
			float $nowPixPerM = $nowUvPix/$nowVerDisTotal;
		    float $nowbai=($pixSizePerVer/$nowPixPerM);
			$nowbai=$nowbai*$par*0.01/$magni;
			print ($shellTotal+" 個目シェル "+$nowbai+"\n");
			float $piv[0];
			if($pivMode!=4){
				string $uvList[];
				clear $uvList;
				if($pivMode==1){
					string $allUvList[]=`polyListComponentConversion -tuv $selectCom`;
					$allUvList=`filterExpand -selectionMask 35 $allUvList`;
					int $uvCount=0;
					for($uv in $allUvList){
						if(stringArrayContains($uv, $nowShellUVList)){
							$uvList[$uvCount]=$uv;
							$uvCount++;
						}
					}
				}
				if($pivMode==2 || $pivMode==3){
					$uvList=$nowShellUVList;
				}
				float $min[2];
				float $max[2];
				$min=`polyEditUV -q $uvList[0]`;
				$max=$min;
				for($uv in $uvList){
					float $pos[] =`polyEditUV -q $uv`;
					if($min[0]>$pos[0])$min[0]=$pos[0];
					if($min[1]>$pos[1])$min[1]=$pos[1];
					if($max[0]<$pos[0])$max[0]=$pos[0];
					if($max[1]<$pos[1])$max[1]=$pos[1];
				}
				if($pivMode==1 || $pivMode==2){
					$piv[0] = ($min[0]+$max[0])/2;
					$piv[1] = ($min[1]+$max[1])/2;
				}
				if($pivMode==3){
					$piv[0] = $min[0];
					$piv[1] = $min[1];
				}
			}
			if($pivMode==4){
				$piv[0] = 0;
				$piv[1] = 0;
			}
			if($scaleVec==1)polyEditUV -pu $piv[0] -pv $piv[1] -su $nowbai -sv $nowbai;
			if($scaleVec==2)polyEditUV -pu $piv[0] -pv $piv[1] -su $nowbai;
			if($scaleVec==3)polyEditUV -pu $piv[0] -pv $piv[1] -sv $nowbai;
			if($scaleVec==4){
				if(size($uvVector)==1){
					vector $u=<<1,0,0>>;
					vector $uvVectorWork=$uvVector[0];
					float $uvAngle= `atand($uvVectorWork.y/$uvVectorWork.x)`;
					polyEditUV -pu $piv[0] -pv $piv[1] -a ($uvAngle * -1);
					polyEditUV -pu $piv[0] -pv $piv[1] -su $nowbai;
					polyEditUV -pu $piv[0] -pv $piv[1] -a ($uvAngle);
				}
				else polyEditUV -pu $piv[0] -pv $piv[1] -su $nowbai -sv $nowbai;
			}
		}
		select $selectCom;
	}
	float $verDisTotal;
	float $uvDisTotal;
	int	  $edgeTotal;
	string $processedEdge[];	
	float $processeduvDis[];	
	float $processedverDis[];	
	for($i=0;$i<size($groupUV1);$i++){	
		int $edgetrue=0;
		int $processedNum=0;
		for($j=0;$j<size($processedEdge);$j++){
			if($edgeNum[$i]==$processedEdge[$j]){
				$edgetrue=1;
				$processedNum=$j;
				break;
			}
		}
		if($edgetrue == 0){
			$processeduvDis[$edgeTotal]=$uvDis[$i];
			$processedverDis[$edgeTotal]=$verDis[$i];
			$processedEdge[$edgeTotal]=$edgeNum[$i];
			$edgeTotal++;
		}
		else{
			$processeduvDis[$processedNum]=($processeduvDis[$processedNum]+$uvDis[$i])/2.0;
		}
	}
	for($i=0;$i<$edgeTotal;$i++){
		$verDisTotal=$verDisTotal+$processedverDis[$i];
		$uvDisTotal=$uvDisTotal+$processeduvDis[$i];
	}
	floatField -e -v $verDisTotal $AriUVScaleCheckerFloatF[0];
	floatField -e -v $uvDisTotal $AriUVScaleCheckerFloatF[1];
	float $uvPix=0;
	float $uvPerM=0;
	float $pixPerM=0;
	float $bai=0;
	float $per=0;
	if ($uvDisTotal!=0){
		$uvPix   = $texSize*$uvDisTotal;
		$uvPerM  = $uvDisTotal/($verDisTotal/$magni);
		$pixPerM = $uvPix/($verDisTotal/$magni);
		$bai     = ($pixSizePerVer/$pixPerM);
		$per     = $pixPerM/$pixSizePerVer*100;
	}
	floatField -e -v $uvPix $AriUVScaleCheckerFloatF[2];
	floatField -e -v $uvPerM $AriUVScaleCheckerFloatF[3];
	floatField -e -v $pixPerM $AriUVScaleCheckerFloatF[4];
	floatField -e -v $bai $AriUVScaleCheckerFloatF[6];
	intField -e -v $edgeTotal $AriUVScaleCheckerFloatF[7];
	if($edgeTotal>=1000)intField -e -bgc 0.4 0.2 0.2 $AriUVScaleCheckerFloatF[7];
	else 				intField -e -bgc 0.25 0.25 0.25 $AriUVScaleCheckerFloatF[7];
	floatField -e -v $per $AriUVScaleCheckerFloatF[9];
	if($per>=99.9){
		floatField -e -bgc 0.2 0.2 0.4  $AriUVScaleCheckerFloatF[9];
	}
	else{
		floatField -e -bgc 0.4 0.2 0.2  $AriUVScaleCheckerFloatF[9];
	}
}
global proc AriUVScaleChecker_scale(int $mode){
	global string $AriUVScaleCheckerFloatF[12];
	global string $AriUVScaleCheckerOptionMenu[2];
	global string $AriUVScaleCheckerScaleVecRB;
	global float $AriUVScaleCheckerMagni;
	int $pivMode = `optionMenu -q -sl $AriUVScaleCheckerOptionMenu[0]`;
	int $scaleVec =`radioButtonGrp -q -sl $AriUVScaleCheckerScaleVecRB`;
	string $select[]= `ls -sl`;
	string $processeduv[];
	AriUVScaleChecker_Get(0);
	ConvertSelectionToUVs;
	if($mode==1){
		polySelectBorderShell 0;
	}
	float $piv[2];
	if($pivMode!=4){
		string $uvList[];
		if($pivMode==1){
		$uvList=`polyListComponentConversion -tuv $select`;
		$uvList=`filterExpand -selectionMask 35 $uvList`;
		}
		if($pivMode==2 || $pivMode==3){
			$uvList=`ls -sl`;
			$uvList=`filterExpand -selectionMask 35 $uvList`;
		}
		float $min[2];
		float $max[2];
		$min=`polyEditUV -q $uvList[0]`;
		$max=$min;
		for($uv in $uvList){
			float $pos[] =`polyEditUV -q $uv`;
			if($min[0]>$pos[0])$min[0]=$pos[0];
			if($min[1]>$pos[1])$min[1]=$pos[1];
			if($max[0]<$pos[0])$max[0]=$pos[0];
			if($max[1]<$pos[1])$max[1]=$pos[1];
		}
		if($pivMode==1 || $pivMode==2){
			$piv[0] = ($min[0]+$max[0])/2;
			$piv[1] = ($min[1]+$max[1])/2;
		}
		if($pivMode==3){
			$piv[0] = $min[0];
			$piv[1] = $min[1];
		}
	}
	if($pivMode==4){
		$piv[0] = 0;
		$piv[1] = 0;
	}
	float $bai  =`floatField -q -v $AriUVScaleCheckerFloatF[6]`;
	float $par  =`floatField -q -v $AriUVScaleCheckerFloatF[10]`;
	float $magni=`floatField -q -v $AriUVScaleCheckerFloatF[11]`;
	$bai=$bai*$par*0.01/$magni;
	if($scaleVec==1 || $scaleVec==4)polyEditUV -pu $piv[0] -pv $piv[1] -su $bai -sv $bai;
	if($scaleVec==2)polyEditUV -pu $piv[0] -pv $piv[1] -su $bai;
	if($scaleVec==3)polyEditUV -pu $piv[0] -pv $piv[1] -sv $bai;
	PolySelectConvert 2;
	select $select;
	AriUVScaleChecker_Get(0);
}
global proc AriUVScaleChecker_check(){
	global int $AriUVScaleChecker_ScriptJob;
	global string $AriUVScaleCheckerGetButton[2];
	if(`checkBox -q -v $AriUVScaleCheckerGetButton[0]`){
		button -e -en 0  $AriUVScaleCheckerGetButton[1];
		$AriUVScaleChecker_ScriptJob=`scriptJob -p "AriUVScaleChecker" -event "SelectionChanged"  "AriUVScaleChecker_Get(0)"`;
	}
	else{
		button -e -en 1  $AriUVScaleCheckerGetButton[1];
		scriptJob -kill $AriUVScaleChecker_ScriptJob;
	}
	AriUVScaleChecker_Get(0);
}
global proc AriUVScaleChecker_GetTexSize(){
	global string $AriUVScaleCheckerFloatF[12];
	string $fileList[] = `ls -sl -type "file"`;
	float $xSize=0;
	if($fileList[0]!=""){
		$xSize = `getAttr ($fileList[0]+".outSizeX")`;
		intField -e -v $xSize $AriUVScaleCheckerFloatF[8];
	}
}
global proc AriUVScaleChecker_ScaleButton(int $mode){
	global string $AriUVScaleCheckerFloatF[12];
	float $val;
	float $newVal;
	if($mode == 0 || $mode == 1) $val =`intField -q -v $AriUVScaleCheckerFloatF[8]`;
	if($mode == 2 || $mode == 3) $val =`floatField -q -v $AriUVScaleCheckerFloatF[5]`;
	if($mode == 4 || $mode == 5) $val =`floatField -q -v $AriUVScaleCheckerFloatF[11]`;
	if($mode == 0 || $mode == 1 || $mode == 2 || $mode == 3){
		int $beki=1;
		if($mode == 0 || $mode ==2){
			for($i=0;$i<20;$i++){
				if($beki<=$val && $beki*2>$val){
					$newVal=$beki*2;
					break;
				}
				$beki=$beki*2;
			}
		}
		if($mode == 1 || $mode ==3){
			for($i=0;$i<20;$i++){
				if($beki<$val && $beki*2>=$val){
					$newVal=$beki;
					break;
				}
				$beki=$beki*2;
			}
		}
		if($newVal<1)$newVal=1;
		if($newVal>65536)$newVal=65536;
	}
	else{
		if($mode == 4)$newVal=$val*10;
		if($mode == 5)$newVal=$val/10.0;
		if($newVal<0.001)$newVal=0.001;
	}
	if($mode == 0 || $mode == 1)intField   -e -v $newVal $AriUVScaleCheckerFloatF[8];
	if($mode == 2 || $mode == 3)floatField -e -v $newVal $AriUVScaleCheckerFloatF[5];
	if($mode == 4 || $mode == 5)floatField -e -v $newVal $AriUVScaleCheckerFloatF[11];
	AriUVScaleChecker_Get(0);
}
global proc AriUVScaleChecker_getButton(int $mode){
	global string $AriUVScaleCheckerFloatF[12];
	float $per=100;
	if($mode==0){
		float $pixSizePerVer=`floatField -q -v $AriUVScaleCheckerFloatF[5]`;
		float $pixPerM=`floatField -q -v $AriUVScaleCheckerFloatF[4]`;
		$per=$pixPerM/$pixSizePerVer*100;
	}
	floatField -e -v $per $AriUVScaleCheckerFloatF[10];
}
global proc AriUVScaleChecker(){
	global string $AriUVScaleCheckerFloatF[12];
	global string $AriUVScaleCheckerGetButton[2];
	global string $AriUVScaleCheckerGoButton[3];
	global string $AriUVScaleCheckerGetText[10];
	global string $AriUVScaleCheckerCheckBox[2];
	global string $AriUVScaleCheckerOptionMenu[2];
	global string $AriUVScaleCheckerScaleVecRB;
	global int $AriUVScaleChecker_ScriptJob;
	string $meter="m";
	int $texSize=1024;
	float $reso=128;
	float $cm=1;
	int $worldTrue=1;
	int $pivMode=1;
	if(`optionVar -exists "AriUVScaleCheckerTexSize"`)	$texSize   =`optionVar -q "AriUVScaleCheckerTexSize"`;
	if(`optionVar -exists "AriUVScaleCheckerReso"`)		$reso      =`optionVar -q "AriUVScaleCheckerReso"`;
	if(`optionVar -exists "AriUVScaleCheckerCm"`)		$cm        =`optionVar -q "AriUVScaleCheckerCm"`;
	if(`optionVar -exists "AriUVScaleCheckerWorld"`)	$worldTrue =`optionVar -q "AriUVScaleCheckerWorld"`;
	if(`optionVar -exists "AriUVScaleCheckerPiv"`)		$pivMode   =`optionVar -q "AriUVScaleCheckerPiv"`;
	if((`window -ex  AriUVScaleChecker`)==true)deleteUI AriUVScaleChecker;
	window -title "AriUVScaleChecker"  -mxb 0  -w 200 -h 120  AriUVScaleChecker;
	columnLayout -adj true;
	columnLayout;
	rowLayout -nc 6 -cw6  82 20 50 20 20 20;
	text -l "Texサイズ";
	columnLayout;
	iconTextButton -i "arrowUp.png"  -w 20 -h 10 -l "" -c "AriUVScaleChecker_ScaleButton(0)";
	iconTextButton -i "arrowDown.png" -w 20 -h 10 -l "" -c "AriUVScaleChecker_ScaleButton(1)";
	setParent..;
	$AriUVScaleCheckerFloatF[8]=`intField -w 50 -v $texSize -cc "AriUVScaleChecker_Get(0)"`;
	text -l "pix";
	button -l "file" -c "AriUVScaleChecker_GetTexSize";
	setParent..;
	rowLayout -nc 5 -cw5  80 20 100 30 30;
	$AriUVScaleCheckerGetText[0]=`text  -l ($meter+"目標解像度")`;
	columnLayout;
	rowLayout -nc 3 -cw3 20 60 20;
	columnLayout;
	iconTextButton -i "arrowUp.png"   -w 20 -h 10 -l "" -c "AriUVScaleChecker_ScaleButton(2)";
	iconTextButton -i "arrowDown.png" -w 20 -h 10 -l "" -c "AriUVScaleChecker_ScaleButton(3)";
	setParent..;
	$AriUVScaleCheckerFloatF[5]=`floatField -v $reso -w 60  -pre 3 -cc "AriUVScaleChecker_Get(0)"`;
	text  -l ("pix");
	setParent..;
	separator -w 110;
	rowLayout -nc 3 -cw3 20 60 20;
	columnLayout;
	iconTextButton -i "arrowUp.png"   -w 20 -h 10 -l "" -c "AriUVScaleChecker_ScaleButton(4)";
	iconTextButton -i "arrowDown.png" -w 20 -h 10 -l "" -c "AriUVScaleChecker_ScaleButton(5)";
	setParent..;
	$AriUVScaleCheckerFloatF[11]=`floatField -v $cm -w 60  -pre 3 -cc "AriUVScaleChecker_Get(0)"`;
	$AriUVScaleCheckerGetText[1]=`text  -l ($meter)`;
	setParent..;
	setParent..;
	setParent..;
	setParent..;
	columnLayout;
	separator -st "in" -w 210;
	rowLayout -nc 3 -cw3 90 60 60;
	text -l "エッジ距離測定";
	radioCollection;
	$AriUVScaleCheckerCheckBox[0]=`radioButton -sl -l "World" -cc "AriUVScaleChecker_Get(0)"`;
	$AriUVScaleCheckerCheckBox[1]=`radioButton -l "Local" -cc "AriUVScaleChecker_Get(0)"`;
	setParent..;
	if(!$worldTrue) radioButton -e -sl $AriUVScaleCheckerCheckBox[1];
	separator -st "in" -w 210;
	rowLayout -nc 5 -cw5 40 60 20 40 20;
	text -l "エッジ";
	$AriUVScaleCheckerFloatF[0]=`floatField -w 60 -ed 0 -pre 2`;
	$AriUVScaleCheckerGetText[2]=`text  -l $meter`;
	$AriUVScaleCheckerFloatF[7]=`intField -w 40 -ed 0`;	
	text -l "本";
	setParent..;
	rowLayout -nc 4 -cw4 40 60 60 60;
	text -l "UV距離";
	$AriUVScaleCheckerFloatF[1]=`floatField -w 60 -ed 0 -pre 3`;
	$AriUVScaleCheckerFloatF[2]=`floatField -w 60 -ed 0 -pre 2`;
	text -l "pix";
	setParent..;
	rowLayout -nc 4 -cw4 40 60 60 60;
	$AriUVScaleCheckerGetText[3]=`text -l ("/ 1"+$meter)`;
	$AriUVScaleCheckerFloatF[3]=`floatField -w 60 -ed 0 -pre 3`;
	$AriUVScaleCheckerFloatF[4]=`floatField -w 60 -ed 0 -pre 2`;
	$AriUVScaleCheckerGetText[4]=`text  -l ("pix/"+$meter)`;
	setParent..;
	setParent..;
	columnLayout;
	separator -st "in" -w 210;
	rowLayout -nc 4 -cw4 100 60 60 60;
	text -l ("目標率");
	$AriUVScaleCheckerFloatF[9]=`floatField  -w 60 -ed 0 -pre 1`;
	text -l ("%");
	setParent..;
	separator -st "in" -w 210;
	rowLayout -nc 4 -vis 0;
	text -w 50 -l ("何倍");
	text -w 50 -l ("");
	$AriUVScaleCheckerFloatF[6]=`floatField  -w 60 -ed 0 -pre 3`;
	setParent..;
	rowLayout -nc 4 -cw4 100 60 5 5;
	text "スケール";
	$AriUVScaleCheckerFloatF[10]=`floatField -pre 3 -v 100`;
	text "% に";
	setParent..;
	rowLayout -nc 4 -cw4 100 50 50 50;
	$AriUVScaleCheckerOptionMenu[0] = `optionMenu -w 90 -label "" `;
					menuItem -label "選択の中心";
					menuItem -label "シェル中心";
					menuItem -label "シェル左下";
					menuItem -label "UV原点";
	optionMenu -e -sl $pivMode $AriUVScaleCheckerOptionMenu[0];
	button -w 50 -l "Get" -c "AriUVScaleChecker_getButton(0)";
	button -w 50 -l "100%" -c "AriUVScaleChecker_getButton(1)";
	setParent..;
	$AriUVScaleCheckerScaleVecRB=`radioButtonGrp -nrb 4 -cw5 0 50 40 40 70 -l "" -la4 "UV" "U" "V" "選択方向" -sl 1 -cc "AriUVScaleChecker_Get(0)"`;
	rowLayout -nc 4;
	$AriUVScaleCheckerGoButton[0]=`button -w 100 -l "選択スケール" -ann "選択エッジをスケール" -c "AriUVScaleChecker_scale(0)"`;
	button -w 100 -l "シェルスケール" -ann "シェルを個別にスケール" -c "AriUVScaleChecker_Get(1)";
	setParent..;	
	setParent..;
	rowLayout -nc 4 -vis 0;
	$AriUVScaleCheckerGetButton[0]=`checkBox -h 24 -l "自動取得" -v 1 -cc "AriUVScaleChecker_check"`;
	$AriUVScaleCheckerGetButton[1]=`button -w 100 -en 0 -l "取得" -c "AriUVScaleChecker_Get(0)"`;
	setParent..;
	showWindow;
	$AriUVScaleChecker_ScriptJob=`scriptJob -p "AriUVScaleChecker" -event "SelectionChanged"  "AriUVScaleChecker_Get(0)"`;
	getLiner();
	AriUVScaleChecker_Get(0);
}
